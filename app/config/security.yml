# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        my_chain_provider:
            chain:
                providers: [ app, my_ldap]

        app:
            id: app.user_provider

        my_ldap:
            ldap:
                service: ldap
                base_dn: %base_dn%
                search_dn: %search_dn%
                search_password: %search_password%
                default_roles: %default_roles%
                uid_key: uid

    encoders:
        "%app.current_user.class%": sha256

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # login_firewall:
        #     pattern:   ^/login$
        #     anonymous: ~
        main:
            anonymous: ~
            form_login_ldap:
                provider: my_chain_provider
                login_path: login
                check_path: login_check
                provider: my_chain_provider
                service: ldap
                dn_string: 'uid={username},dc=ldapserver,dc=com'
            # form_login:
            #     login_path: login
            #     check_path: login_check
            remember_me:
                secret:   '%secret%'
                lifetime:  8640000
            logout:
                path: logout

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_LEADER]
        ROLE_LEADER: [ROLE_LEADER, ROLE_USER]

    access_control:
        - { path: ^/admin, role: ROLE_ADMIN }
        - { path: ^/admin$, role: IS_AUTHENTICATED_REMEMBERED } 
        - { path: ^/user, role: ROLE_USER }
        - { path: ^/user$, role: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/leader, role: ROLE_LEADER }
        - { path: ^/leader$, role: IS_AUTHENTICATED_REMEMBERED } 
